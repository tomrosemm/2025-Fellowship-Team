"""
zkp.py

Requires: zokrates_interface.py
Provides functions for generating zero-knowledge proofs (ZKPs) for authentication workflows
Supports both simulated (hash-based) and real (ZoKrates CLI) ZKP generation and verification

- Simulates ZKP generation by hashing OTP and timestamp for rapid prototyping and testing.
- Provides wrapper functions to interact with ZoKrates CLI for real ZKP workflows.
- Designed to be used by Vehicle and RSU classes for proof generation and verification.
"""

import hashlib

from zokrates_interface import (
    run_zokrates_compile,
    run_zokrates_setup,
    run_zokrates_compute_witness,
    run_zokrates_generate_proof,
    run_zokrates_verify
)

"""
Simulate ZoKrates proof generation (hash-based)
Args:
otp (str): The one-time password generated by the vehicle
timestamp (int): The timestamp used in OTP generation
Returns:
str: A simulated ZKP proof (hash of OTP and timestamp)
"""
def generate_zkp_proof_simulated(otp, timestamp):
    combined = f"{otp}{timestamp}".encode()
    proof = hashlib.sha256(combined).hexdigest()
    return proof

"""
Generate a real ZKP proof using the ZoKrates CLI interface
Args:
circuit_path (str): Path to the ZoKrates .zok circuit file (e.g., '../zokrates-files/dummy.zok')
otp (str): The one-time password generated by the vehicle
timestamp (int): The timestamp used in OTP generation
Returns:
bool: True if proof is valid, False otherwise
"""
def generate_zkp_proof_real(circuit_path, otp, timestamp):
    
    if not run_zokrates_compile(circuit_path):
        return False
    
    if not run_zokrates_setup():
        return False
    
    args = [str(otp), str(timestamp)]
    if not run_zokrates_compute_witness(args):
        return False
    
    if not run_zokrates_generate_proof():
        return False
    
    return run_zokrates_verify()


generate_zkp_proof = generate_zkp_proof_simulated

if __name__ == "__main__":
    # Simple test for ZKP proof generation
    otp = "testotp"
    timestamp = 1234567890
    proof = generate_zkp_proof(otp, timestamp)
    print(f"[ZKP] Simulated proof for otp='{otp}', timestamp={timestamp}: {proof}")

